import sys

if(len(sys.argv) < 2):
    print("usage: python3 to_virt.py bank_row_col")

BK_SHIFT = 24
ROW_SHIFT = 0
COL_SHIFT = 12

bank, row, col = list(map(int, sys.argv[1].split('_')))
ADDR_MTX = [
0b000000000000000000100000000000,
0b000000000000000000010000000000,
0b000000000000000000001000000000,
0b000000000000000000000100000000,
0b000000000000000000000010000000,
0b000000000000000000000001000000,
0b000000000000000000000000100000,
0b000000000000000000000000010000,
0b000000000000000000000000001000,
0b000000000000000000000000000100,
0b000000000000000000000000000010,
0b000000000000000000000000000001, 
0b001000000000000000000100010000, #5
0b000001000000000000100010001000, #4
0b000010000000000000010001000100, #3
0b000100000000000000001000100001, #2
0b010000001000000000000000000011, #1
0b110000001100000000000000000001, #0 
0b000000100000000000000000000000,
0b000000010000000000000000000000,
0b000000001000000000000000000000,
0b000000000100000000000000000000,
0b000000000010000000000000000000,
0b000000000001000000000000000000,
0b000000000000100000000000000000,
0b000000000000010000000000000000,
0b000000000000001000000000000000,
0b000000000000000100000000000000,
0b000000000000000010000000000000,
0b000000000000000001000000000000,
]
l = (bank << BK_SHIFT) | (row << ROW_SHIFT) | (col << COL_SHIFT)

def get_parity(a):
    result = 0
    while(a):
        # print(bin(a), result)
        if (a & 1):
            result ^= 1
        a = a >> 1
    return result

# print(get_parity(0))
# print(get_parity(10))
# print(get_parity(110))
# print(get_parity(101))
# print(get_parity(1011))

res = 0
for i in ADDR_MTX:
    res = res << 1
    res |= get_parity(l & i)
print(f'{bin(res)}, {hex(res)}')